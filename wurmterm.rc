[ -f ~/.bashrc ] && . ~/.bashrc

AGENT_CODE='
use strict;
use IO::Socket::UNIX qw( SOCK_STREAM SOMAXCONN );
$| = 1;
my $socket_path = "/tmp/wt.sock";
unlink($socket_path);
my $l = IO::Socket::UNIX->new(
   Type   => SOCK_STREAM,
   Local  => $socket_path,
   Listen => SOMAXCONN,
) or die $!;
while(1) {
my $s = $l->accept();
my $line;
while($line = <$s>) {
  my $d = `$line 2>/dev/null`;
  $d =~ s/\"//g;
  $d =~ s#[\r\n]+#\\n#g;
  print $s "{ \"s\": $?, \"d\": \"$d\" }\nEND\n";
}
}
'

# Setup SSH alias
ssh() {
   # FIXME: Permissions?
   [ -d ~/.wurmterm ] || mkdir ~/.wurmterm
   [ -d ~/.wurmterm/hosts ] || mkdir ~/.wurmterm/hosts

   # FIXME: check for non-trivial ssh that we do not want
   # to intercept. Check content of $@
   name="$@"
   # FIXME: for testing use a constant name
   name="remote"
   [ -a ~/.wurmterm/hosts/${name}.sock ] && rm ~/.wurmterm/hosts/${name}.sock
   /usr/bin/ssh -t -L ~/.wurmterm/hosts/${name}.sock:/tmp/wt.sock "$@" " (LC_ALL=C /usr/bin/perl -w -e '$AGENT_CODE' & ); bash -l"
}
